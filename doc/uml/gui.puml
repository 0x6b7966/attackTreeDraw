@startuml
skinparam monochrome true
skinparam classAttributeIconSize 0
scale 2

namespace gui {
  namespace items {
    QGraphicsItemGroup <|-- Node
    class Node {
      +node
      +edit
      +threatConjunction
      +counterConjunction
      +attributes
      +title
      +typeRect
      +titleRect
      +headerHeight
      -__init__(self, node)
      +printAttributes(self)
      +paint(self, painter, options, widget=None)
      +mouseDoubleClickEvent(self, event)
    }

    Node <|-- Threat
    class Threat {
      +type
      -__init__(self, node)
    }

    Node <|-- Countermeasure
    class Countermeasure {
      +type
      -__init__(self, node)
    }

    QGraphicsItemGroup <|-- Conjunction
    class Conjunction {
      +parent
      +parentArrow
      +children
      +arrows
      +title
      +conRect
      -__init__(self, parent, conjType)
      +addArrow(self, child)
      +addParentArrow(self)
      +paint(self, painter, options, widget=None)
      +repaint(self)
    }

    QGraphicsRectItem <|-- ConjunctionRect
    class ConjunctionRect {
      +paint(self, painter, options, widget=None)
    }

    QGraphicsLineItem <|-- Arrow
    class Arrow {
      +arrowHead
      +start
      +end
      -__init__(self, start, end)
      +boundingRect(self)
      +shape(self)
      +updatePosition(self)
      +paint(self, painter, options, widget=None)
    }

  }
  namespace main {
    QMainWindow <|-- Main
    class Main {
      +tree
      +saved
      +file
      +itemList
      -__init__(self)
      +initUI(self)
      +printGraph(self)
      +printGraphRecursion(self, node, x, y, parent=None)
      +reorderTree(self, g)
      +fixCollision(self, left, right)
      +checkCollRec(self, item, toCheckList)
      +moveRec(self, item, x, y)
      +resizeEvent(self, QResizeEvent)
      +loadFile(self)
      +saveFile(self)
      +saveFileAs(self)
      +exportPNG(self)
      +exportPDF(self)
      +print(self)
      +new(self)
      +redrawGraph(self)
    }

  }
  namespace windows {
    QWidget <|-- NodeEdit
    class NodeEdit {
      +nodeItem
      -__init__(self, node)
      +setupUi(self)
    }

  }
}
namespace main {
}
@enduml
